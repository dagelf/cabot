version: '2'
services:
  web:
    extends:
      file: docker-compose-base.yml
      service: base
    env_file:
      - conf/development.env
    command: >
      sh -c "yes | django-admin makemigrations --merge --pythonpath /code --settings cabot.settings -v 3 &&
      django-admin migrate --pythonpath /code --settings cabot.settings -v 3 &&
      django-admin runserver --pythonpath /code 0.0.0.0:5000"
    ports:
      - 5000:5000
    depends_on:
      - postgres
      - rabbitmq
      - worker
      - beat
      - events

  worker:
    extends:
      file: docker-compose-base.yml
      service: base
    env_file:
      - conf/development.env
    command: >
      celery -A cabot worker
      --loglevel=DEBUG
      --pool=solo
      --hostname=test-worker
      --queues=celery,test-worker
    depends_on:
      - postgres
      - rabbitmq
      - events

  worker2:
    extends:
      file: docker-compose-base.yml
      service: base
    env_file:
      - conf/development.env
    command: >
      celery -A cabot worker
      --loglevel=DEBUG
      --pool=solo
      --hostname=worker2
      --queues=worker2
    depends_on:
      - postgres
      - rabbitmq
      - events

  beat:
    extends:
      file: docker-compose-base.yml
      service: base
    env_file:
      - conf/development.env
    command: >
      celery -A cabot beat
      --loglevel=DEBUG
      --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - postgres
      - rabbitmq
      - events

  events:
    extends:
      file: docker-compose-base.yml
      service: base
    command: >
      celery -A cabot events
      --loglevel=DEBUG
      --camera django_celery_monitor.camera.Camera
    depends_on:
      - postgres
      - rabbitmq
    restart: always

  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - 15672:15672

  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ../data:/var/lib/postgresql/data

volumes:
  datavolume:
